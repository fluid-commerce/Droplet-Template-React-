// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Simple models for Fluid droplet
model Company {
  id            String   @id @default(cuid())
  fluidId       String   @unique // Fluid company ID
  name          String
  logoUrl       String?
  fluidShop     String?  // Company's Fluid shop subdomain (e.g., "pokey.fluid.app")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  installations Installation[]

  @@map("companies")
}

model Installation {
  id                  String   @id @default(cuid())
  companyId           String
  fluidId             String   @unique // Fluid installation ID
  authenticationToken String?  // cdrtkn_ token for company API access
  isActive            Boolean  @default(true)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  company             Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  products            Product[]
  
  @@map("installations")
}

model Product {
  id              String   @id @default(cuid())
  installationId  String
  fluidProductId  String   // Fluid product ID
  title           String
  sku             String?
  description     String?
  imageUrl        String?
  status          String?  // active, draft, archived
  price           String?
  inStock         Boolean  @default(true)
  public          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  installation    Installation @relation(fields: [installationId], references: [id], onDelete: Cascade)
  
  @@unique([installationId, fluidProductId])
  @@map("products")
}
